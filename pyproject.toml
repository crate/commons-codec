[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "commons-codec"
description = "Data decoding, encoding, conversion, and translation utilities."
readme = "README.md"
keywords = [
  "airrohr",
  "bson",
  "cdc",
  "conversion",
  "convert",
  "data",
  "decode",
  "deserialize",
  "dynamodb",
  "encode",
  "i/o",
  "jmespath",
  "json",
  "jsonpointer",
  "luftdaten.info",
  "map data",
  "marshal",
  "mongodb",
  "nested data",
  "sensor.community",
  "serialize",
  "sql",
  "tasmota",
  "tool",
  "transcode",
  "transform",
  "translate",
  "transon",
  "ttn",
  "tts",
  "unmarshal",
  "unserialize",
  "utility",
  "zyp",
]
license = { text = "LGPL 3, EUPL 1.2" }
authors = [
  { name = "Andreas Motl", email = "andreas.motl@panodata.org" },
]
requires-python = ">=3.8.6"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Plugins",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
  "Operating System :: OS Independent",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Programming Language :: SQL",
  "Topic :: Adaptive Technologies",
  "Topic :: Communications",
  "Topic :: Database",
  "Topic :: Documentation",
  "Topic :: Education",
  "Topic :: Internet",
  "Topic :: Office/Business",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Pre-processors",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Archiving",
  "Topic :: System :: Benchmark",
  "Topic :: System :: Clustering",
  "Topic :: System :: Distributed Computing",
  "Topic :: System :: Logging",
  "Topic :: System :: Monitoring",
  "Topic :: System :: Networking",
  "Topic :: System :: Systems Administration",
  "Topic :: Text Processing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "attrs<25",
  "backports-strenum<1.3; python_version<'3.11'",
  "cattrs<24",
  "simplejson<4",
  "toolz<0.13",
]
optional-dependencies.all = [
  "commons-codec[mongodb,zyp]",
]
optional-dependencies.develop = [
  "mypy<1.12",
  "poethepoet<0.28",
  "pyproject-fmt<2.3",
  "ruff<0.7",
  "validate-pyproject<0.20",
]
optional-dependencies.doc = [
  "furo==2024.1.29",               # Check visited link style on newer versions!
  "myst-parser[linkify]>=0.18,<5",
  "sphinx-autobuild==2021.3.14",   # Newer versions stopped "watching" appropriately?
  "sphinx-copybutton",
  "sphinx-design-elements<1",
  "sphinxcontrib-mermaid<1",
  "sphinxext-opengraph<1",
]
optional-dependencies.mongodb = [
  "pymongo<4.9",
]
optional-dependencies.release = [
  "build<2",
  "twine<6",
]
optional-dependencies.test = [
  "pytest<9",
  "pytest-cov<6",
  "pytest-mock<4",
]
optional-dependencies.zyp = [
  "jmespath<1.1",
  "jq<1.9",
  "jsonpointer<4",
  "python-dateutil<2.10",
  "pyyaml<7",
  "transon==0.0.7",
]

urls.Changelog = "https://commons-codec.readthedocs.io/changes.html"
urls.Documentation = "https://commons-codec.readthedocs.io/"
urls.Homepage = "https://commons-codec.readthedocs.io/"
urls.Issues = "https://github.com/daq-tools/commons-codec/issues"
urls.Repository = "https://github.com/daq-tools/commons-codec"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

extend-exclude = [
]

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.extend-ignore = [
  # zip() without an explicit strict= parameter
  "B905",
  # df is a bad variable name. Be kinder to your future self.
  "PD901",
  # Unnecessary variable assignment before `return` statement
  "RET504",
  # Unnecessary `elif` after `return` statement
  "RET505",
  # Probable insecure usage of temporary file or directory
  "S108",
]

lint.per-file-ignores."examples/*" = [
  "ERA001", # Found commented-out code
  "T201",   # Allow `print`
]

# ===================
# Tasks configuration
# ===================
lint.per-file-ignores."tests/*" = [
  "S101", # Allow use of `assert`, and `print`.
]

[tool.pytest.ini_options]
addopts = """
  -rfEXs -p pytester --strict-markers --verbosity=3
  --cov --cov-report=term-missing --cov-report=xml
  """
minversion = "2.0"
log_level = "DEBUG"
log_cli_level = "DEBUG"
log_format = "%(asctime)-15s [%(name)-36s] %(levelname)-8s: %(message)s"
pythonpath = [
  "src",
]
testpaths = [
  "commons_codec",
  "examples",
  "tests",
  "zyp",
]
python_files = [
  "test_*.py",
  "*_test.py",
]
xfail_strict = true
markers = [
  "tasmota",
  "wemos",
]

[tool.coverage.paths]
source = [
  "src/",
]

[tool.coverage.run]
branch = false
omit = [
  "tests/*",
  "src/zyp/util/dictx.py",
]

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = [
  "# pragma: no cover",
  "raise NotImplemented",
]

[tool.mypy]
mypy_path = "src"
packages = [
  "commons_codec",
  "zyp",
]
exclude = [
]
check_untyped_defs = true
explicit_package_bases = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
namespace_packages = true
non_interactive = true
# Needed until `mypy-0.990` for `ConverterDefinition` in `converter.py`.
# https://github.com/python/mypy/issues/731#issuecomment-1260976955
# enable_recursive_aliases = true

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

[tool.poe.tasks]

check = [
  "lint",
  "test",
]

doc-autobuild = [
  { cmd = "sphinx-autobuild --open-browser --watch src doc doc/_build" },
]
doc-html = [
  { cmd = "sphinx-build -W --keep-going doc doc/_build" },
]
doc-linkcheck = [
  { cmd = "sphinx-build -W --keep-going -b linkcheck doc doc/_build" },
]

format = [
  { cmd = "ruff format ." },
  # Configure Ruff not to auto-fix (remove!):
  # unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff format --check ." },
  { cmd = "ruff check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload --skip-existing dist/*" },
]

test = [
  { cmd = "pytest" },
]
